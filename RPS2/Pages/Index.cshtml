@page
@model IndexModel

<main>
    <!-- homepage (matchmaking) -->
    <section id="matchmaking" class="center">
        <section style="text-align: center; padding:1px">
            <img src="images/Logo.svg" class="mb-5 logo"/>
        </section>
        <section style="text-align:center; padding:1px" class="mt-5">
            <div class="d-flex justify-content-center mb-4">
                <input type="text" class="form-control shadow-none" placeholder="Enter your name" maxlength="30">
            </div>
            <div class="d-flex justify-content-center">
                <input id="friendIdInput" type="text" class="form-control shadow-none" placeholder="Enter your friend's code*" maxlength="8">
            </div>
            <div class="d-flex justify-content-center mb-5">
                <label class="note">*optional: leave blank for automatic matchmaking</label>
            </div> 
            <button id="findGameBtn" class="btn btn-primary mt-5">Find game &raquo;</button>
            <button id="fightAIBtn" class="btn btn-primary mt-5">VS AI</button>

            <div class="d-flex justify-content-end me-5">
                <div style="flex-direction: column; display:flex">
                    <img src="images/play_with_friend.svg" class="play-friends"/>
                    <div>
                        <a id="GUID" class="btn btn-primary mt-3">
                            <span id="GUID-TEXT">
                            </span>
                            <img src="images/copy_icon.svg" class="ms-3" style="text-align:right; height:2rem; width: auto" />
                        </a>
                    </div>
                </div>
            </div>
        </section>
    </section>

    <!-- searching -->
    <section id="searching" class="center" style="display:none">
        <section style="text-align: center; padding:1px">
            <img src="images/Logo.svg" class="logo" />
        </section>
        <section style="text-align:center; padding:1px" class="mt-5 mb-5">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </section>
        <section style="text-align: center; padding:1px">
            <label id="waitingQuip" class="waiting-text"></label>
        </section>
        <section style="text-align: center; padding:1px">
            <a id="GUID" class="btn btn-primary mt-5">
                <span id="GUID-TEXT-2">
                    asdfasdf
                </span>
                <img src="images/copy_icon.svg" class="ms-3" style="text-align:right; height:2rem; width: auto" />
            </a>
        </section>
        <section style="text-align: center; padding:1px">
            <label class="friend-note">Still waiting? Share your code again!</label>
        </section>

    </section>

    <!-- gameplay -->
    <section id="game" style="display:none">
        <div class="container">
            <div class="top-row">
                <div class="d-flex justify-content-center">
                    <div class="d-flex align-items-center flex-column">
                        <span class="player-name-top">
                        Friend
                        </span>
                        <div class="item">
                            <div id="partnerChoiceWait" class="spinner-border spinner-card" role="status" style="display:none">
                            </div>
                            <img id="partnerChoice" src="images/checkmark_icon.svg" style=""/>
                        </div>
                    </div>
                </div>
                <div>
                    <section style="text-align: center;">
                        <h1 id="round" class="round-text">Round 1</h1>
                    </section>
                    <section style="text-align: center;">
                        <h1 id="countdown" class="countdown">00:10</h1>
                    </section>
                </div>
                <div class="d-flex justify-content-center">
                    <div class="d-flex align-items-center flex-column">
                        <span class="player-name-top">
                            Enemy1
                        </span>
                        <div class="item">
                            <div id="partnerEnemyChoiceWait" class="spinner-border spinner-card" role="status" style="display:none">
                            </div>
                            <img id="partnerEnemyChoice" src="images/checkmark_icon.svg" style=""/>
                        </div>
                    </div>
                </div>
            </div>
            <div></div>

            <div class="middle-row">
                <div class="star-container">
                    <img id="team_empty_star_1" src="images/star_empty.svg" class="star" style="display:unset" />
                    <img id="team_empty_star_2" src="images/star_empty.svg" class="star" style="display:unset" />
                    <img id="team_filled_star_1" src="images/star_filled.svg" class="star" style="display:none" />
                    <img id="team_filled_star_2" src="images/star_filled.svg" class="star" style="display:none" />
                </div>
                <div class="star-container">
                    <img id="enemy_empty_star_1" src="images/star_empty.svg" class="star" style="display:unset" />
                    <img id="enemy_empty_star_2" src="images/star_empty.svg" class="star" style="display:unset"/>
                    <img id="enemy_filled_star_1" src="images/star_filled.svg" class="star" style="display:none" />
                    <img id="enemy_filled_star_2" src="images/star_filled.svg" class="star" style="display:none" />
                </div>
            </div>
            
            <div class="bottom-row">
                <div class="d-flex justify-content-center">
                    <div class="d-flex align-items-center flex-column">
                        <div class="choose-item" style="">
                            <button id="rockBtn" type="button" class="btn shadow-none">
                                <img id="rockChoice" src="images/rock.svg" />
                            </button>
                            <button id="paperBtn" type="button" class="btn shadow-none">
                                <img id="paperChoice" src="images/paper.svg" />
                            </button>
                            <button id="scissorsBtn" type="button" class="btn shadow-none">
                                <img id="scissorsChoice" src="images/scissors.svg" />
                            </button>
                        </div>
                        <div class="item" style="display:none !important">
                            <img id="selfChoice" src="images/rock.svg" style="display:none" />
                        </div>
                        <span class="player-name-bottom">
                            You!
                        </span>
                    </div>
                </div>
                <div></div>
                <div class="d-flex justify-content-center">
                    <div class="d-flex align-items-center flex-column">
                        <div class="item">
                            <div id="selfEnemyChoiceWait" class="spinner-border spinner-card" role="status" style="display:none">
                            </div>
                            <img id="selfEnemyChoice" src="images/checkmark_icon.svg"/>
                        </div>
                        <span class="player-name-bottom">
                            Enemy2
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- results -->
</main>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js"></script>
<script>
    let quips = ["Scissors at the ready", "Avalanche incoming", "Paper uncovered"];
    let choices = ["rock", "paper", "scissors"];
    let playerChoices = [0, 0, 0, 0];
    let roundSecondsRemaining = 0;

    friendIdInput.addEventListener('input', function() {
        // restrict friend code input to alphanum
        this.value = this.value.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();

        // tether 'find game' button state to friend code input validity
        document.getElementById("findGameBtn").disabled = this.value.length > 0 && this.value.length < 8;
    });

    function generateUserId() {
        return crypto.randomUUID().substring(0, 8);
    }

    // generate new guid
    let userId = localStorage.getItem('userId');
    if (!userId) {
        userId = generateUserId();
        localStorage.setItem('userId', userId);
    }

    // display guid
    document.getElementById('GUID-TEXT').innerText = `${userId}`;
    document.getElementById('GUID-TEXT-2').innerText = `${userId}`;


    // create the SignalR connection
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/gamehub")
        .build();

    function startConnection() {
        connection.start()
            .then(() => {
                console.log("SignalR connected");

                // room connection test
                const roomCode = "room1";
                connection.invoke("JoinRoom", roomCode).catch(err => console.error(err));
            })
            .catch(err => console.error("Error while starting SignalR connection: " + err));
    }

    function revealChoices() {
        document.getElementById('partnerChoice').src = "images/" + choices[playerChoices[2]] + ".svg"
        document.getElementById('partnerEnemyChoice').src = "images/" + choices[playerChoices[3]] + ".svg"
        document.getElementById('selfEnemyChoice').src = "images/" + choices[playerChoices[1]] + ".svg"
    }

    let aiMode = false;
    let countdownInterval = null;
    function SetActiveScreen(elemId) {
        document.getElementById("matchmaking").style.display = 'none';
        document.getElementById("searching").style.display = 'none';
        document.getElementById("game").style.display = 'none';
        // document.getElementById("results").style.display = 'none';
        document.getElementById(elemId).style.display = 'unset';

        // perform necessary operations on screen change
        switch (elemId) {
            case "matchmaking":
                break;
            case "searching":
                document.getElementById("waitingQuip").innerText = quips[quips.length * Math.random() | 0] + "... Just waiting for your friend to join the fray!(1 / 4)";
                break;
            case "game":
                
                // countdown
                roundSecondsRemaining = 10;
                countdownInterval = setInterval(() => {
                    --roundSecondsRemaining;
                    document.getElementById('countdown').textContent = "00:" + String(roundSecondsRemaining).padStart(2, '0');

                    // countdown finished
                    if (roundSecondsRemaining === 0) {
                        clearInterval(countdownInterval);
                        countdownInterval = null;
                        document.getElementById('countdown').textContent = 'Time\'s up!';

                        if (aiMode)
                            makeAiChoices();
                        revealChoices();
                    }
                }, 1000);

                if (aiMode) {
                    // ready all 3 bots immediately
                    document.getElementById("partnerChoice").src = "images/checkmark_icon.svg";
                    document.getElementById("partnerEnemyChoice").src = "images/checkmark_icon.svg";
                    document.getElementById("selfEnemyChoice").src = "images/checkmark_icon.svg";
                }
                break;
        }
    }

    function makeAiChoices() {
        for (var i = 1; i < 4; ++i)
            playerChoices[i] = choices.length * Math.random() | 0;
    }

    function makeChoice(moveInd) {
        if (countdownInterval) {
            playerChoices[0] = moveInd;
            if (aiMode) {
                // end countdown immediately upon selecting a choice in ai mode
                clearInterval(countdownInterval);
                countdownInterval = null;
                document.getElementById('countdown').textContent = 'Time\'s up!';
                makeAiChoices();
                revealChoices();
            }
        }
    }

    document.getElementById("rockChoice").addEventListener("click", function () {
        makeChoice(0);
    });

    document.getElementById("paperChoice").addEventListener("click", function () {
        makeChoice(1);
    });

    document.getElementById("scissorsChoice").addEventListener("click", function () {
        makeChoice(2);
    });

    document.getElementById("fightAIBtn").addEventListener("click", function () {
        aiMode = true;
        SetActiveScreen("game");
    });

    document.getElementById("findGameBtn").addEventListener("click", function () {
        aiMode = false;
        SetActiveScreen("searching");
        // startConnection();
    });

    // listen for moves
    connection.on("ReceiveMove", function(playerMove) {
        console.log("move received: " + playerMove);
    });
</script>
