@page
@model IndexModel

<main>
    <section id="matchmaking" class="center" style="visibility:visible">
        <section style="text-align: center; padding:1px">
            <img src="images/Logo.png" class="mb-5"/>
        </section>
        <section style="text-align:center; padding:1px" class="mt-5">
            <div class="d-flex justify-content-center mb-4">
                <input type="text" class="form-control shadow-none" placeholder="Enter your name" maxlength="30">
            </div>
            <div class="d-flex justify-content-center">
                <input id="friendIdInput" type="text" class="form-control shadow-none" placeholder="Enter your friend's code*" maxlength="8">
            </div>
            <div class="d-flex justify-content-center mb-5">
                <label class="note">*optional: leave blank for automatic matchmaking</label>
            </div> 
            <a id="findGameBtn" class="btn btn-primary mt-5">Find game &raquo;</a>

            <div class="d-flex justify-content-end me-5">
                <div style="flex-direction: column; display:flex">
                    <img src="images/play_with_friend.png" />
                    <a id="GUID" class="btn btn-primary mt-3">
                        <img src="images/copy_icon.png" class="ms-3" style="text-align:right"/>
                    </a>
                </div>
            </div>
        </section>
    </section>

    <section id="searching" class="center" style="visibility:hidden">
        <section style="text-align: center; padding:1px">
            <img src="images/Logo.png" class="mb-5" />
        </section>
        <section style="text-align:center; padding:1px" class="mt-5 mb-5">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </section>
        <section style="text-align: center; padding:1px">
            <label class="waiting-text">Scissors at the ready... Just waiting for your friend to join the fray! (1/4)</label>
        </section>
    </section>

    <section id="game" style="visibility:hidden">
        <div class="row">
            <div class="col d-flex flex-column justify-content-between">
                <div style="flex-direction: column; display:flex">
                    <div class="ms-5 border border-white rounded" style="width:12rem; height:16rem">
                    </div>
                    <div style="height:10rem">
                    </div>
                    <div class="col">
                        <div class="ms-5 border border-white rounded" style="width:12rem; height:16rem">
                        </div>
                    </div>
                </div>
                
            </div>
            <div class="col">
                <section style="text-align: center; padding:1px">
                    <h1 id="round" class="display-4 mb-3" style="color:white;">Round 1</h1>
                </section>
            </div>
            <div class="col">
                <div class="d-flex justify-content-end me-5">
                    <div style="flex-direction: column; display:flex">
                        <div class="me-5 border border-white rounded" style="width:12rem; height:16rem">
                        </div>
                        <div style="height:10rem">
                        </div>
                        <div class="col">
                            <div class="me-5 border border-white rounded" style="width:12rem; height:16rem">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js"></script>
<script>
    friendIdInput.addEventListener('input', function() {
        // restrict to alphanum
        this.value = this.value.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();
    });

    function generateUserId() {
        return crypto.randomUUID().substring(0, 8);
    }

    // generate new guid
    let userId = localStorage.getItem('userId');
    if (!userId) {
        userId = generateUserId();
        localStorage.setItem('userId', userId);
    }

    // display guid
    document.getElementById('GUID').innerText = `Your ID: ${userId}`;


    // create the SignalR connection
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/gamehub")
        .build();

    function startConnection() {
        connection.start()
            .then(() => {
                console.log("SignalR connected");

                // room connection test
                const roomCode = "room1";
                connection.invoke("JoinRoom", roomCode).catch(err => console.error(err));
            })
            .catch(err => console.error("Error while starting SignalR connection: " + err));
    }

    document.getElementById("findGameBtn").addEventListener("click", function() {
        startConnection();
    });

    // listen for moves
    connection.on("ReceiveMove", function(playerMove) {
        console.log("move received: " + playerMove);
    });
</script>
